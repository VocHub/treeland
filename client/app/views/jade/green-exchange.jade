.green-ex-container 
  //- .fx-valley
  //-   p Made with <i class="fa fa-heart" aria-hidden="true"></i> by 
  //-     span FX Valley  
  button.menu-toggle(ng-click="toggle_sidebar = toggle_sidebar ? false : true" ng-class="toggle_sidebar ? 'toggle-menu-active' : ''") <i class="fa fa-bars" aria-hidden="true"></i>
  .side-bar(ng-class="toggle_sidebar ? 'toggle-menu-active' : ''")
    .search
      form
        input(type="text", placeholder="Search the green exchange",ng-model="search_text")

        input(type="submit", name="name", value="Search",ng-click="search()")
    hr
    //- .sign-up(ng-hide="isLoggedIn()")
    //-   a(href="#",ng-click="signUpCollapse()")
    //-     .img
    //-       img(src="/images/nn-round-line.svg", alt="",height="80px",width="80px")
    //-     .text  
    //-       h1 Sign Up Here
    //-       p Start exchanging, it's free.
    //-   .signup-form(ng-class="isSignUpCollapse ? 'collapse' : ''")
    //-     form(name="authform.signUpForm", ng-submit="signUp()")
    //-       label() Name 
    //-         span *
    //-       input(type="text", name="fname",placeholder="First name",ng-model="user.first_name",ng-class="{ 'has-error' : authform.signUpForm.fname.$invalid && !authform.signUpForm.fname.$pristine }" required)
    //-       //- label() Last name
    //-       //- input(type="text", name="lname",placeholder="Last name",ng-model="user.last_name")
    //-       label() Email 
    //-         span *
    //-       input(type="email", name="email",placeholder="Email address",ng-model="user.email",ng-class="{ 'has-error' : authform.signUpForm.email.$invalid && !authform.signUpForm.email.$pristine }" required)
    //-       .error(ng-show="duplicate_email")
    //-         .text
    //-           p Duplicate email address. Please enter another email address.  
    //-       label() Password 
    //-         span *
    //-       input(type="password", name="pass",placeholder="Password",ng-model="user.password",ng-class="{ 'has-error' : authform.signUpForm.pass.$invalid && !authform.signUpForm.pass.$pristine }" required)
    //-       label() Repeat password 
    //-         span *
    //-       input(type="password", name="rpass",placeholder="Repeat password",ng-model="user.repeat_password",ng-class="{ 'has-error' : authform.signUpForm.rpass.$invalid && !authform.signUpForm.rpass.$pristine  }" required)
    //-       .error(ng-show="!authform.signUpForm.rpass.$pristine && (user.password !== user.repeat_password)")
    //-         .text
    //-           p Passwords should match.
    //-       label(class="guid")
    //-         span * 
    //-         span Fields are required.
    //-         
    //-       input(type="submit", name="name", value="Sign up",ng-disabled="authform.signUpForm.$invalid || plant.plantLoading || (user.password !== user.repeat_password)")
    //-       .terms
    //-         .text
    //-           p By signing up, you agree to our<br><strong>Terms and Privacy Policy.</strong>
    
    .menu  
      ul
        li
          a(href="#", ng-click="getAllPosts(); currentSidebarItem='all_plants'", ng-hide="",ng-class="isMenuItemActive('all_plants') ? 'active' : ''") 
            .side-menu-item
              .icon
                img(src="/images/responds.svg", alt="Post a new plant")
              .text
                h2 All plants
                p Available for exchange
        li(ng-hide="") 
          a(href="#", ng-click="doCollapse(); currentSidebarItem='post_plants'", ng-hide="",ng-class="isMenuItemActive('post_plants') ? 'active' : ''") 
            .side-menu-item
              .icon
                img(src="/images/responds.svg", alt="Post a new plant")
              .text
                h2 Offer a new plant
                p Start exchanging
          .plant-info(ng-class="collapse ? 'collapse' : ''")
            .post-type
              button(type="button", name="button",ng-class="checkType('Exchange')",ng-click="typeTabClick('Exchange')") Exchange
              button(type="button", name="button",ng-class="checkType('Donation')",ng-click="typeTabClick('Donation')") Donate
              button(type="button", name="button",ng-class="checkType('Request')",ng-click="typeTabClick('Request')") Request
            .form

              form(name="pform.plantForm", ng-submit="isLoggedIn() ? submitForm() : submitInstantForm()" novalidate)
                label Plant name 
                input(type="text",ng-model="plant.name", name="name",placeholder="Name of the plant", ng-class="{ 'has-error' : pform.plantForm.name.$invalid && !pform.plantForm.name.$pristine }" required)

                label Description
                textarea(name="description",ng-model="plant.description",id="description", rows="4", cols="40",placeholder="Description")

                label Quantity 
                input(type="number",ng-model="plant.quantity",min="1",name="quantity",id="qty", placeholder="Number of plants", ng-class="{ 'has-error' : pform.plantForm.quantity.$invalid && !pform.plantForm.quantity.$pristine }" required)

                label Location 
                input(places-auto-complete size=80 ng-model="plant.address" component-restrictions="{country:'lk'}" types="{{types}}" on-place-changed="greenExchange.placeChanged()", ng-class="{ 'has-error' : pform.plantForm.location.$invalid && !pform.plantForm.location.$pristine }", name="location" required)  
                
                .notify-me(ng-hide="isLoggedIn()")
                  p Notify me when someone responses.
                  label Name
                  input(type="text", ng-model="plant.owner_name",name="owner",id="ownr", placeholder="Name", ng-class="{ 'has-error' : pform.plantForm.owner.$invalid && !pform.plantForm.owner.$pristine }", ng-required="!isLoggedIn()")
                  
                  label Email
                  input(type="email", ng-model="plant.owner_email",name="email",id="email", placeholder="Email address", ng-class="{ 'has-error' : pform.plantForm.email.$invalid && !pform.plantForm.email.$pristine }", ng-required="!isLoggedIn()")
                  
                  .mail-temple
                    p Hosted with <i class="fa fa-heart" aria-hidden="true"></i> by 
                      span Temple of Mail
                  

                //- label Your name
                //- input(type="text",name="username",ng-model="plant.username", placeholder="Your name", ng-class="{ 'has-error' : pform.plantForm.username.$invalid && !pform.plantForm.username.$pristine }" required) 
                //- label Email
                //- input(type="email",name="email",ng-model="plant.email", placeholder="Email address", ng-class="{ 'has-error' : pform.plantForm.email.$invalid && !pform.plantForm.email.$pristine }" required) 

                input(type="submit", value="Post" ng-disabled="pform.plantForm.$invalid || plant.plantLoading")
                .loading(ng-show="plant.plantLoading")
                  img(src="/images/ball.gif", alt="Wait..", height="30px" , width="30px")
                      

            .map  
              ng-map(class="map")             
        li(ng-hide="!isLoggedIn()")
          a(href="#", ng-click="getMyPlants(); currentSidebarItem='my_plants'", ng-hide="",ng-class="isMenuItemActive('my_plants') ? 'active' : ''") 
            .side-menu-item
              .icon
                img(src="/images/avatar.svg", alt="Post a new plant")
              .text
                h2 My plants
                p View and edit my plants
                
        //- li(ng-hide="!isLoggedIn()")
        //-   a(href="#", ng-click="getMyBids(); currentSidebarItem='my_bids'", ng-hide="",ng-class="isMenuItemActive('my_bids') ? 'active' : ''") 
        //-     .side-menu-item
        //-       .icon
        //-         img(src="/images/avatar.svg", alt="Post a new plant")
        //-       .text
        //-         h2 My bids
        //-         p Bids and responses   
      
      
    .filler
  //- .new-posts()
  //-   h1 {{posts.length}}
  //-   p Offers
  //- 
  .posts
    .verify_email_notification(ng-show="verify_email_notification")
      h1 <i class="fa fa-check" aria-hidden="true"></i> Your are almost ready
      p You are successfully signed up with Nature Nurture
      .notification 
        p.important Please check your inbox and verify your email address.
        p We have sent you a verification email to the email address you provided and it should be in your inbox shortly.
    .guide  
      .donation-guide
        .image
          img(src="/images/donate.svg", alt="How to offer plants")
          h1 Offer plants
          p From your backyard to the world
        .text
          h2 How to offer?
          p 
            span 
              img(src="/images/offer_screen.gif", alt="Offer new plants button screen shot")
            span Click 
            span.bold Offer a new plant 
            span on the side menu. Then you have options
            span 
              img(src="/images/options_screen.png", alt="Options screen shot")
            span.bold Exchange
            span - Offer plants for exchange.
            span.bold <br>Donate
            span - Donate plants.
            span.bold <br>Request
            span - Of course you can request too.
            
            
      .donation-guide.last
        .image
          img(src="/images/request.svg", alt="How to request plants")
          h1 Request plants
          p From green exchange to your backyard  
        .text
          h2 How to request?
          p You have two options
            br
            br
            span.bold 1. Post a request
              img(src="/images/request_screen.png", alt="Request new plants button screen shot")
            span.bold 2. Search for the plant you want
            span 
              img(src="/images/search_screen.gif", alt="Options screen shot")
            span.bold respond 
            span with your contact details.
            span 
              img(src="/images/respond_screen.gif", alt="Options screen shot")
            
            span and wait for the call. 
              
    .post(ng-repeat = "post in posts")
      .owner
        .image
          img(class='img',src='/images/avatar.svg')
        .details
          h2(class='name')  {{post.owner.name ? post.owner.name : post.owner_name}}
          p(class='action') has offered a new plant on 
            span#marketplace 
              strong Green Exchange
          p(class='date') {{post.createdAt | date:"MM/dd/yyyy 'at' h:mma"}}
          
            
        
      .o-divider 
      .item
        span(class="type") {{post.responses.length}} Response{{post.responses.length == 1 ? '':'s'}}
        span(class="type",ng-class="getPostType(post.type).toLowerCase()") {{post.type}}
        
        .image
          img(src='/images/plant.png')  
        .details
          span(ng-hide="post.editing || post.prompt_delete || post.prompt_close")
          
            h3(class='name') {{post.name}}
              
            p(class='status') {{post.address}}
            p(class='discription') {{post.description}}
            p(class='discription') Number of plants: {{post.quantity}}
            //- a(href="#",ng-click="post.response_form_class = 'collapse'",ng-hide="isMyPost(post) || !isLoggedIn()") 
            //-   p(class='responds')
            //-     span
            //-       //- img(src="/images/responds.svg", alt="",height="25",width="25")
            //-     span(ng-class="getPostType(post.type).toLowerCase()") <i class="fa fa-comment" aria-hidden="true"></i> Respond  
            //- a(href="#",ng-click="edit(post)",ng-show="isMyPost(post) && isLoggedIn()") 
            //-   p(class='responds')
            //-     span
            //-       //- img(src="/images/responds.svg", alt="",height="25",width="25")
            //-     span(ng-class="getPostType(post.type).toLowerCase()") <i class="fa fa-pencil" aria-hidden="true"></i> Edit  
            //- 
            
                
          .form(ng-show="post.editing")

            form(name="pform.editForm", ng-submit="submitEditForm(post)" novalidate)
              label Plant name 
              input(type="text",ng-model="post.shadow.name", name="name",placeholder="Name of the plant", ng-class="{ 'has-error' : pform.editForm.name.$invalid && !pform.editForm.name.$pristine }" required)

              label Description

              input(type="text",name="description",ng-model="post.shadow.description",id="description",placeholder="Description")

              label Quantity 

              input(type="number",ng-model="post.shadow.quantity",min="1",name="quantity",id="qty", placeholder="Number of plants", ng-class="{ 'has-error' : pform.editForm.quantity.$invalid && !pform.editForm.quantity.$pristine }" required)

              label Location 

              input(places-auto-complete size=80 ng-model="post.shadow.address" component-restrictions="{country:'lk'}" types="{{types}}" on-place-changed="greenExchange.placeChanged()", ng-class="{ 'has-error' : pform.editForm.location.$invalid && !pform.editForm.location.$pristine }", name="location" required)  
              .buttons
                input(type="submit", value="Done" ng-disabled=" post.shadow.editInProgress")
                input(type="button", value="Cancel" ng-disabled="post.shadow.editInProgress",ng-click="editCancel(post)")  
                .loading(ng-show="post.shadow.editInProgress")
                  img(src="/images/ball.gif", alt="Wait..", height="20px" , width="20px")
                         
          .prompt(ng-show="post.prompt_delete")
            .message
              p.info You are about to delete this plant.
              p Are you sure you want to delete this plant? 
            .buttons
              button(type="button", name="button",class="yes",ng-click="deletePost(post)") Yes
              button(type="button", name="button",class="no",ng-click="post.prompt_delete = false") No
          
          .prompt(ng-show="post.prompt_close")
            .message
              p.info You are about to mark this plant as closed.<br>That means you have completed the transactions on this item. 
              p Are you sure you want to mark this plant as closed?
            .buttons
              button(type="button", name="button",class="yes",ng-click="markAsClosed(post)") Yes
              button(type="button", name="button",class="no",ng-click="post.prompt_close = false") No
                  
              
        //- .status
        //-   h3(class='current-status')
        .controles(ng-hide="post.editing || post.prompt_delete || post.prompt_close")
          ul
            li(ng-hide="isMyPost(post)") 
              a(href="#",ng-click="post.response_form_class = 'collapse'") 
                i(class="fa fa-comment" aria-hidden="true")
                span  Respond
            li(ng-show="isMyPost(post) && isLoggedIn()")
              a(href="#",ng-click="edit(post)") 
                i(class="fa fa-pencil" aria-hidden="true")
                span  Edit
            li(ng-show="isMyPost(post) && isLoggedIn()")
              a(href="#",ng-click="promptClose(post)") 
                i(class="fa fa-check" aria-hidden="true") 
                span  Mark as closed
              
            li       
              button(class="trigger",ng-click="") 
                i(class="fa fa-cog" aria-hidden="true")
              .menu 
                ul
                  li 
                    a(href="#",ng-click="report(post)")
                      i(class="fa fa-ban" aria-hidden="true")
                      span  Report item 
                  li(ng-show="isMyPost(post) && isLoggedIn()")
                    a(href="#",ng-click="promptDelete(post)") 
                      i(class="fa fa-trash-o" aria-hidden="true")
                      span  Delete    
              
                
      .respond(ng-class="post.response_form_class")
        .respond-form(ng-show="post.type === 'Exchange'")
          form(name="post.exchangeResponseForm", ng-submit="submitResponse(post,post.exchangeResponseForm)" novalidate)            
            input(type="text",ng-model="post.new_response.name", name="name",placeholder="Name of the plant", ng-class="{ 'has-error' : post.exchangeResponseForm.name.$invalid && !post.exchangeResponseForm.name.$pristine }" required)
            input(type="number",ng-model="post.new_response.quantity",min="1",name="quantity",id="qty", placeholder="Number of plants", ng-class="{ 'has-error' : post.exchangeResponseForm.quantity.$invalid && !post.exchangeResponseForm.quantity.$pristine }" required)
            input(places-auto-complete size=80 ng-model="post.new_response.address" component-restrictions="{country:'lk'}" types="{{types}}" on-place-changed="greenExchange.placeChanged()", ng-class="{ 'has-error' : post.exchangeResponseForm.location.$invalid && !post.exchangeResponseForm.location.$pristine }", name="location" required)  
            input(type="text",ng-model="post.new_response.contact_info", name="contact_info",placeholder="Contact number", ng-class="{ 'has-error' : post.exchangeResponseForm.contact_info.$invalid && !post.exchangeResponseForm.contact_info.$pristine }" required)
            p Please make sure the contact number is correct. 
            .break  
              input(type="submit", value="Respond" ng-disabled="post.exchangeResponseForm.$invalid || post.responseLoading")
              .loading(ng-show="post.responseLoading")
                img(src="/images/ball.gif", alt="Wait..", height="30px" , width="30px")
        
        .respond-form(ng-show="post.type === 'Donation'")
          p You can request these donated plants.
          form(name="post.donationResponseForm", ng-submit="submitResponse(post,post.donationResponseForm)" novalidate)            
            //input(type="text",ng-model="post.new_response.name", name="name",placeholder="Name of the plant", ng-class="{ 'has-error' : post.donationResponseForm.name.$invalid && !post.donationResponseForm.name.$pristine }" required)
            
            input(type="number",ng-model="post.new_response.quantity",min="1",name="quantity",id="qty", placeholder="Number of plants", ng-class="{ 'has-error' : post.donationResponseForm.quantity.$invalid && !post.donationResponseForm.quantity.$pristine }" required)
            input(places-auto-complete size=80 ng-model="post.new_response.address" component-restrictions="{country:'lk'}" types="{{types}}" on-place-changed="greenExchange.placeChanged()", ng-class="{ 'has-error' : post.donationResponseForm.location.$invalid && !post.donationResponseForm.location.$pristine }", name="location" required)  
            input(type="text",ng-model="post.new_response.contact_info", name="contact_info",placeholder="Contact number", ng-class="{ 'has-error' : post.donationResponseForm.contact_info.$invalid && !post.donationResponseForm.contact_info.$pristine }" required)
            p Please make sure the contact number is correct. 
            .break  
              input(type="submit", value="Respond" ng-disabled="post.donationResponseForm.$invalid || post.responseLoading")
              .loading(ng-show="post.responseLoading")
                img(src="/images/ball.gif", alt="Wait..", height="30px" , width="30px")
        
        .respond-form(ng-show="post.type === 'Request'")
          p You can provide this requested plant.
          form(name="post.requestResponseForm", ng-submit="submitResponse(post,post.requestResponseForm)" novalidate)            
            //input(type="text",ng-model="post.new_response.name", name="name",placeholder="Name of the plant", ng-class="{ 'has-error' : post.requestResponseForm.name.$invalid && !post.requestResponseForm.name.$pristine }" required)
            
            input(type="number",ng-model="post.new_response.quantity",min="1",name="quantity",id="qty", placeholder="Number of plants", ng-class="{ 'has-error' : post.requestResponseForm.quantity.$invalid && !post.requestResponseForm.quantity.$pristine }" required)
            input(places-auto-complete size=80 ng-model="post.new_response.address" component-restrictions="{country:'lk'}" types="{{types}}" on-place-changed="greenExchange.placeChanged()", ng-class="{ 'has-error' : post.requestResponseForm.location.$invalid && !post.requestResponseForm.location.$pristine }", name="location" required)  
            input(type="text",ng-model="post.new_response.contact_info", name="contact_info",placeholder="Contact number", ng-class="{ 'has-error' : post.requestResponseForm.contact_info.$invalid && !post.requestResponseForm.contact_info.$pristine }" required)
            p Please make sure the contact number is correct. 
            .break  
              input(type="submit", value="Respond" ng-disabled="post.requestResponseForm.$invalid || post.responseLoading")
              .loading(ng-show="post.responseLoading")
                img(src="/images/ball.gif", alt="Wait..", height="30px" , width="30px")
                                              
  
            
      .market-item-bids(ng-show="post.responses.length > 0") 
        ul(class='bids-list')
          //- li(class='bid-item',ng-repeat="res in post.responses")
          //-   .bidder
          //-     .image
          //-       img(src='/images/avatar.svg')      
          //-   .details
          //-     h3.name {{res.response.owner.name}} 
          //-       small.action has bid on this plant with 
          //-       span {{res.response.quantity}} {{res.response.name}} plant{{res.response.quantity == 1 ? '' : 's'}}
          //-     //h3.value 
          //-     p.discription {{res.response.createdAt | date:"MM/dd/yyyy 'at' h:mma"}}
          li(class='bid-item',ng-repeat="res in post.responses")
            .bidder
              .image
                img(src='/images/avatar.svg')      
            .details
              h3.name {{res.response.owner.name}} 
                small.action {{(post.type === 'Exchange' || post.type === 'Donation')?(post.type === 'Exchange'? 'has offered':'has requested'):'is willing to provide' }} 
                span {{res.response.quantity}} {{res.response.name}} plant{{res.response.quantity == 1 ? '' : 's'}}
                
              //h3.value 
              p.discription {{res.response.createdAt | date:"MM/dd/yyyy 'at' h:mma"}} 
                span(ng-show="isMyPost(post)") from <strong>{{res.response.address}}</strong>
            .contact-info(ng-show="isMyPost(post)")
              button(type="button", name="button",ng-click="getContactInfo(res)",ng-class="res.contact_info ? 'reveal' : ''") 
                span(ng-hide="res.contact_info") Show contact info 
                span(ng-show="res.contactLoading")
                  img(src="/images/ball.gif", alt="Wait..", height="10px" , width="10px")
                span(ng-show="res.contact_info") Contact info: {{res.contact_info}}
                  
              









//- script(type="application/javascript", src="../../assets/js/script.js")
//script(type="application/javascript",src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBCO13QjFKNU_2w0aCcwqJV5vymDjr5OVY&libraries=places&callback=initAutocomplete" async defer)
